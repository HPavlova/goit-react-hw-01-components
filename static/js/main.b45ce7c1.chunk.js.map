{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","randomInterval","min","max","Math","floor","random","Statistics","title","statistics","statList","map","id","percentage","item","style","backgroundColor","FriendList","friends","container","isOnline","status","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b45ce7c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendList_container__1Jupg\",\"item\":\"FriendList_item__-lYix\",\"status\":\"FriendList_status__3C5jV\",\"avatar\":\"FriendList_avatar__2fiZr\",\"name\":\"FriendList_name__2fvFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1k0Uk\"};","import PropTypes from 'prop-types';\nimport styles from 'components/Profile/Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={name} className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport styles from 'components/Statistics/Statistics.module.css';\n\nconst randomInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst randomColor = () => {\n  let color = `rgb(${randomInterval(0, 255)},${randomInterval(\n    0,\n    255,\n  )},${randomInterval(0, 255)})`;\n  return color;\n};\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statList}>\n        {stats.map(({ id, label, percentage }) => {\n          return (\n            <li\n              className={styles.item}\n              style={{ backgroundColor: randomColor() }}\n              key={id}\n            >\n              <span className={styles.label}>{label}</span>\n              <span className={styles.percentage}>{percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from 'components/FriendList/FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles.container}>\n      {friends.map(({ avatar, name, isOnline, id }) => {\n        return (\n          <li className={styles.item} key={id}>\n            <span\n              className={styles.status}\n              style={{ backgroundColor: isOnline ? 'green' : 'red' }}\n            ></span>\n            <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n            <p className={styles.name}>{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.img,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport styles from 'components/TransactionHistory/TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => {\n          return (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  item: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['payment', 'invoice', 'withdrawal', 'deposit'])\n        .isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import './App.css';\n\nimport Profile from 'components/Profile/Profile';\nimport user from 'components/Profile/user.json';\n\nimport Statistics from 'components/Statistics/Statistics';\nimport statisticalData from 'components/Statistics/statistical-data.json';\n\nimport FriendList from 'components/FriendList/FriendList';\nimport friends from 'components/FriendList/friends.json';\n\nimport TransactionHistory from 'components/TransactionHistory/TransactionHistory';\nimport transactions from 'components/TransactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}